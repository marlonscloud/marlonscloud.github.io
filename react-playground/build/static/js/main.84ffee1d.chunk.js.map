{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","Date","toLocaleTimeString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setInterval","ReactDOM","render","document","getElementById"],"mappings":"6LAAe,I,YCaAA,MAVf,WACE,OACE,gCACE,6CACA,0BACA,+BAAM,IAAIC,MAAOC,2BCIRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCsCdQ,aATe,WAEbC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,WAKR,KAYpBb,K","file":"static/js/main.84ffee1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <div>Some input</div>\n      <input></input>\n      <pre>{new Date().toLocaleTimeString()}</pre>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction Button(props) {\n  return (\n    <button onClick={() => props.increment(props.incrementAmount)}>\n      +{props.incrementAmount}\n    </button >\n  );\n}\n\nfunction Display(props) {\n  return (\n    <div>\n      {props.message}\n    </div>\n  );\n}\n\nfunction AppTwo() {\n  var [counter, setCounter] = useState(0);\n  var incrementCounter = (amount) => setCounter(counter + amount);\n  return (\n    <>\n      <Button increment={incrementCounter} incrementAmount={5} />\n      <Button increment={incrementCounter} incrementAmount={10} />\n      <Button increment={incrementCounter} incrementAmount={100} />\n      <Button increment={incrementCounter} incrementAmount={1} />\n      <Display message={counter} />\n    </>\n  );\n}\n\nconst Render = () => {\n\n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n\n}\n\nsetInterval(Render, 1000);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}